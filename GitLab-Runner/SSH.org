#+TITLE: GitLab Runner > SSH 설정

* 개요
GitLab Runner 에서 같은 계정의 git submodule을 clone하거나 다른 브랜치로 push할 경우 ssh key가 필요하다.
GitLab Runner에서 생성한 ssh-key를 프로젝트 단위로 =Settings > Repository > Deploy Keys= 에서 개별 프로젝트에만 ssh key를 추가하거나 계정 단위로 =Settings > SSH Keys= 에서 추가할 수 있다.

* ssh-keygen
** 요구 사항
- sudo
ssh-keygen 시 *gitlab-runner* 사용자로 만들어야 한다.
사용자를 변경하여 사용하기 위해서는 *sudo* 명령어가 필요하다.

** 키쌍 생성
*gitlab-runner* 사용자로 RSA 형식의 4096 비트의 ssh 키쌍을 만든다.
#+NAME: ssh-keygen
#+BEGIN_SRC sh
$ sudo -u gitlab-runner -H ssh-keygen -t rsa -b 4096
$ cat /home/gitlab-runner/id_rsa.pub
#+END_SRC

공개키 =/home/gitlab-runner/id_rsa.pub= 를 GitLab 서버의 =Settings > Repository > Deploy Keys= (프로젝트에서만 사용) 혹은 =Settings > SSH Keys= (계정의 모든 프로젝트에서 사용) 에 추가한다.

* SSH 인증 문제 해결 방법

** Host key verification failed
[[https://askubuntu.com/questions/45679/ssh-connection-problem-with-host-key-verification-failed-error][참고]]

이 증상은 서버의 호스트키가 변경되었기 나타난다. =StrictHostKeyChecking= 옵션을 =no= 로 ssh를 연결을 확인하면 문제가 해결된다.

#+NAME: ssh1
#+BEGIN_SRC sh
$ ssh -v -o StrictHostKeyChecking=no git@gitlab.example.com
#+END_SRC
